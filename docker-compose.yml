version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: localenv-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: localenv
      MYSQL_USER: localenv
      MYSQL_PASSWORD: localenv123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/conf:/etc/mysql/conf.d
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - localenv-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  postgres:
    image: postgres:15
    container_name: localenv-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: localenv
      POSTGRES_USER: localenv
      POSTGRES_PASSWORD: localenv123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    networks:
      - localenv-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U localenv"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: localenv-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - localenv-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  mysql_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  localenv-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16